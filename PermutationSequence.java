/**
 * The set [1,2,3,бн,n] contains a total of n! unique permutations.
 * 
 * By listing and labeling all of the permutations in order, We get the
 * following sequence (ie, for n = 3):
 * 
 * "123" "132" "213" "231" "312" "321" Given n and k, return the kth permutation
 * sequence.
 * 
 * Note: Given n will be between 1 and 9 inclusive.
 * 
 */

public class PermutationSequence {
	public String getPermutation(int n, int k) {
		char[] arr = new char[n];
		int pro = 1;
		for (int i = 0; i < n; ++i) {
			arr[i] = (char) ('1' + i);
			pro *= (i + 1);
		}
		k = k - 1;
		k %= pro;
		pro /= n;
		for (int i = 0; i < n - 1; ++i) {
			int selectI = k / pro;
			k = k % pro;
			pro /= (n - i - 1);
			int temp = arr[selectI + i];
			for (int j = selectI; j > 0; --j) {
				arr[i + j] = arr[i + j - 1];
			}
			arr[i] = (char) temp;
		}
		return String.valueOf(arr);
	}
}

??:

???????

???????????,????n??k,??? 1,2,3,... , n???????,???k????

??????:??n?????n!???;??n-1????(n-1)!????

????n????,?????????,???n-1??? (n-1)!????

??,????n????,??????????,??????(n-1)!????

?????????????(n-1)!?????? 

?? k/(n-1)! ????????????index????k??????????????index???,???????????????

??,??k????k%(n-1)!?????n????

 ??,???????????,?k?--?
 
 public String getPermutation(int n, int k) {  
        k--;//to transfer it as begin from 0 rather than 1
        
        List<Integer> numList = new ArrayList<Integer>();  
        for(int i = 1; i<= n; i++)
            numList.add(i);
       
        int factorial = 1;    
        for(int i = 2; i < n; i++)  
            factorial *= i;    
        
        StringBuilder res = new StringBuilder();
        int times = n-1;// ????n?
        while(times>=0){
            int indexInList = k/factorial;
            res.append(numList.get(indexInList));  
            numList.remove(indexInList); //???? !                  
            
            k = k%factorial;//new k for next turn
            if(times!=0)
                factorial = factorial/times;//new (n-1)!
            
            times--;
        }
        
        return res.toString();
    }
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	